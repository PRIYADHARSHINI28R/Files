{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable6",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable7",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable10",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable9",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "select1"
				},
				{
					"name": "rank1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "split1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "join2"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "pivot1"
				},
				{
					"name": "unpivot1"
				},
				{
					"name": "join3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source1, source2 join(source1@ProductCategoryID == source2@ProductCategoryID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(startyear = year(SellStartDate)) ~> derivedColumn1",
				"derivedColumn1 sort(asc(source1@Name, true)) ~> sort1",
				"sort1 select(mapColumn(",
				"          ProductID,",
				"          Name = source1@Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID = source1@ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate,",
				"          ThumbNailPhoto,",
				"          ThumbnailPhotoFileName,",
				"          rowguid = source1@rowguid,",
				"          ModifiedDate = source1@ModifiedDate,",
				"          ProductCategoryID = source2@ProductCategoryID,",
				"          ParentProductCategoryID,",
				"          Name = source2@Name,",
				"          rowguid = source2@rowguid,",
				"          ModifiedDate = source2@ModifiedDate,",
				"          {start year} = startyear",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 rank(desc(ListPrice, true),",
				"     output(RankProduct as long)) ~> rank1",
				"select2 filter(ListPrice>1000) ~> filter1",
				"rank1 split({start year}<2006,",
				"     disjoint: false) ~> split1@(Before, After)",
				"split1@Before, source1 lookup(split1@Before@ProductID == source1@ProductID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          ProductID = split1@Before@ProductID,",
				"          Name = split1@Before@Name,",
				"          ProductNumber = split1@Before@ProductNumber,",
				"          Color = split1@Before@Color,",
				"          StandardCost = split1@Before@StandardCost,",
				"          ListPrice = split1@Before@ListPrice,",
				"          Size = split1@Before@Size,",
				"          Weight = split1@Before@Weight,",
				"          ProductCategoryID = split1@Before@ProductCategoryID,",
				"          ProductModelID = split1@Before@ProductModelID,",
				"          SellStartDate = split1@Before@SellStartDate,",
				"          SellEndDate = split1@Before@SellEndDate,",
				"          DiscontinuedDate = split1@Before@DiscontinuedDate,",
				"          ThumbNailPhoto = split1@Before@ThumbNailPhoto,",
				"          ThumbnailPhotoFileName = split1@Before@ThumbnailPhotoFileName,",
				"          rowguid = split1@Before@rowguid,",
				"          ModifiedDate = split1@Before@ModifiedDate,",
				"          ParentProductCategoryID,",
				"          {start year},",
				"          RankProduct,",
				"          ProductID = source1@ProductID,",
				"          Name = source1@Name,",
				"          ProductNumber = source1@ProductNumber,",
				"          Color = source1@Color,",
				"          StandardCost = source1@StandardCost,",
				"          ListPrice = source1@ListPrice,",
				"          Size = source1@Size,",
				"          Weight = source1@Weight,",
				"          ProductCategoryID = source1@ProductCategoryID,",
				"          ProductModelID = source1@ProductModelID,",
				"          SellStartDate = source1@SellStartDate,",
				"          SellEndDate = source1@SellEndDate,",
				"          DiscontinuedDate = source1@DiscontinuedDate,",
				"          ThumbNailPhoto = source1@ThumbNailPhoto,",
				"          ThumbnailPhotoFileName = source1@ThumbnailPhotoFileName,",
				"          rowguid = source1@rowguid,",
				"          ModifiedDate = source1@ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"filter1 keyGenerate(output({Product ID} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"source2, source3 join(source2@ProductCategoryID == source3@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 aggregate(groupBy(source2@ProductCategoryID),",
				"     ProductID = count(ProductID)) ~> aggregate1",
				"aggregate1 pivot(groupBy(ProductCategoryID),",
				"     pivotBy(ProductID),",
				"     ProductCount = count(ProductID),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> pivot1",
				"pivot1 unpivot(output(",
				"          {unpivot col} as string,",
				"          unpivotcolumn as long",
				"     ),",
				"     ungroupBy(ProductCategoryID),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1",
				"surrogateKey1, unpivot1 join(select2@ProductCategoryID == unpivot1@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}